@page "/signUp"
@inject HttpClient Http
@using PartagesWebBlazorFSCore3.Shared.Dtos.Input.Auth;
    <EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="field">
            <label class="label">Username</label>
            <p class="control has-icons-left has-icons-right">
                <InputText id="username" bind-Value="@model.Username" class="input" />
                <span class="icon is-small is-left">
                    <i class="fas fa-user"></i>
                </span>
                <span class="icon is-small is-right">
                    <i class="fas fa-check"></i>
                </span>
                @*
                @if (swAvailable)
                {
                    <span class="help is-success">Ce nom d'utilisateur est disponible</span>
                }
                *@
                <span class="help is-danger"><ValidationMessage For="@(() => model.Username)" /></span>
            </p>
        </div>
        <div class="field">
            <p class="control has-icons-left">
                <!-- https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Forms/InputComponents/InputText.cs -->
                <input id="password" value="@model.Password" type="password" class="input" />
                <input class="input" type="password" placeholder="Password">
                <span class="icon is-small is-left">
                    <i class="fas fa-lock"></i>
                </span>
                <span class="help is-danger">This email is invalid</span>
            </p>
        </div>
        <div class="field">
            <p class="control">
                <button class="button is-success" type="submit">
                    Register
                </button>
            </p>
        </div>
    </EditForm>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@functions {
    private UserForRegisterInputDto model = new UserForRegisterInputDto();
@*
    string UsernameAvailableCssClass = "input";
    bool swAvailable;
    protected async Task CheckIfUsernameAvailable(UIChangeEventArgs e)
    {
        if ((string)e.Value != "")
        {
            var client = new HttpClient();
            UserForCheckIfAvailableDto dto = new UserForCheckIfAvailableDto();
            dto.Username = (string)e.Value;
            swAvailable = await Http.PostJsonAsync<Boolean>("api/Auth/Available", dto);
            if (swAvailable)
            {
                UsernameAvailableCssClass = "input is-success";
            }
            else
            {
                UsernameAvailableCssClass = "input";
            }
        }
        else
        {
            swAvailable = true;
            UsernameAvailableCssClass = "";
        }
    }
*@
    protected void HandleValidSubmit()
    {

    }
}
