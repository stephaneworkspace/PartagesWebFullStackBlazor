@page "/signUp"
@inject HttpClient Http
@using PartagesWebBlazorFSCore3.Shared.Dtos.Input.Auth;

<div class="field">
    <label class="label">Username</label>
    <p class="control has-icons-left has-icons-right">
        <input class="input @UsernameAvailableCssClass"
                type="text"
                placeholder="Text input"
                onchange=@CheckIfUsernameAvailable />
        <span class="icon is-small is-left">
            <i class="fas fa-user"></i>
        </span>
        <span class="icon is-small is-right">
            <i class="fas fa-check"></i>
        </span>
        @if (swAvailable)
        {
            <span class="help is-success">Ce nom d'utilisateur est disponible</span>
        }
        <span class="help is-danger">This email is invalid</span>
    </p>
 </div>
<div class="field">
    <p class="control has-icons-left">
        <input class="input" type="password" placeholder="Password">
        <span class="icon is-small is-left">
            <i class="fas fa-lock"></i>
        </span>
        <span class="help is-danger">This email is invalid</span>
    </p>
</div>
<div class="field">
    <p class="control">
        <button class="button is-success" onclick="@FormSubmit">
            Register
        </button>
    </p>
</div>
<!--
<div class=”col-sm-6 col-md-4 offset-md-4”>
    <h3 class=”text-center login-title”>I Want To Be a New User</h3>
    <div class=”account-wall”>
        <div class=”form-signin”>
            <input type=”text”
                   class=”form-control”
                   name=”email” bind=”@Email” />
            <input type=”password”
                   class=”form-control”
                   name=”password” bind=”@Password” />
            <button class=”btn btn-primary
                    onclick=”@TryRegister”>
                Sign me in
            </button>
        </div>
        <div class=”text-center”>@Message</div>
    </div>
</div>-->
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@functions {
    // Http available
    string UsernameAvailableCssClass = "";
    bool swAvailable;

    protected async Task CheckIfUsernameAvailable(UIChangeEventArgs e)
    {
        if ((string)e.Value != "")
        {
            var client = new HttpClient();
            UserForCheckIfAvailableDto dto = new UserForCheckIfAvailableDto();
            dto.Username = (string)e.Value;
            swAvailable = await Http.PostJsonAsync<Boolean>("api/Auth/Available", dto);
            if (swAvailable)
            {
                UsernameAvailableCssClass = "is-success";
            }
            else
            {
                UsernameAvailableCssClass = "";
            }
        }
        else
        {
            swAvailable = true;
            UsernameAvailableCssClass = "";
        }
    }

    protected void FormSubmit()
    {

    }
}