@page "/forumTopics/{id:int}"
@inject IJSRuntime JsRuntime
@inject IUriHelper UriHelper
@inject LocalStorage Storage
@inject IAlertifyService AlertifyService
@inject IHttpForumCategorieService HttpForumCategorieService
@inject IHttpForumTopicService HttpForumTopicService
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using PartagesWebBlazorFSCore3.Client.Helpers;
@using PartagesWebBlazorFSCore3.Client.Services;
@using PartagesWebBlazorFSCore3.Client.Services.Http;
@using PartagesWebBlazorFSCore3.Shared.Dtos.Output.Forum.ForumCategorie.ForSingleSelect;
@using PartagesWebBlazorFSCore3.Shared.Dtos.Output.Forum.ForumTopic.ForList;

<h1>Forum</h1>

@if (items == null || forumCategorie == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><a href="forumCategories">Index du forum</a> » <a href="forumTopics/@id">@forumCategorie.Name</a></p>
    <table class="table">
        <thead>
            <tr>
                <th>Nom</th>
                <th>Sujets</th>
                <th>Postes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td><a href="forumPosts/@item.Id">@item.Name</a></td>
                    <td>@item.View</td>
                    <td>@item.CountForumPost</td>
                </tr>
            }
        </tbody>
    </table>
}
@*
<!--
<p>Header : @header.currentPage / @header.itemsPerPage / @header.totalItems / @header.totalPages</p>
-->
*@
<p>Header : @header</p>
<p>Header2 : @header2.CurrentPage</p>

@functions {
    // ForumCategorie id
    [Parameter] int id { get; set; }
    ForumTopicForListDto[] items;
    ForumCategorieForSingleSelectDto forumCategorie;

    string header;
    PaginationHeader header2 = new PaginationHeader();

    protected override async Task OnInitAsync()
    {
        HttpResponseMessage response;

        response = await HttpForumCategorieService.GetForumCategorie(id);
        switch (response.StatusCode)
        {
            case System.Net.HttpStatusCode.OK:
                string content = await response.Content.ReadAsStringAsync();
                forumCategorie = Json.Deserialize<ForumCategorieForSingleSelectDto>(content);
                break;
            default:
                AlertifyService.Open("Erreur lors du chargement de la catégorie du forum", TypeAlertify.Error);
                UriHelper.NavigateTo("/");
                break;
        }

        response = await HttpForumTopicService.GetForumTopics(id);
        switch (response.StatusCode)
        {
            case System.Net.HttpStatusCode.OK:
                string content = await response.Content.ReadAsStringAsync();
                items = Json.Deserialize<ForumTopicForListDto[]>(content);
                var head = response.Headers.GetValues("Pagination");
                // header = Json.Deserialize<PaginationHeader>(head.FirstOrDefault());
                header = head.FirstOrDefault();
                header2 = Json.Deserialize<PaginationHeader>(header);
                break;
            default:
                AlertifyService.Open($"Erreur lors du chargement des sujets du forum de la catégorie {forumCategorie.Name}", TypeAlertify.Error);
                UriHelper.NavigateTo("/");
                break;
        };
    }
}
