@page "/forumTopics/{id:int}"
@inject IJSRuntime JsRuntime
@inject IUriHelper UriHelper
@inject LocalStorage Storage
@inject IAlertifyService AlertifyService
@inject IHttpForumTopicService HttpForumTopicService
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using PartagesWebBlazorFSCore3.Client.Helpers;
@using PartagesWebBlazorFSCore3.Client.Services;
@using PartagesWebBlazorFSCore3.Client.Services.Http;
@using PartagesWebBlazorFSCore3.Shared.Dtos.Output.Forum.ForumTopic.ForList

<h1>Forum</h1>

<p>Voici la liste des catégories du forum</p>

@if (items == null)
{
<p><em>Loading... @id</em></p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Sujets</th>
            <th>Postes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
        {
        <tr>
            <td>@item.Name</td>
            <td></td>
            <td></td>
        </tr>
        }
    </tbody>
</table>
}

@functions {
    [Parameter] int id { get; set; }
    ForumTopicForListDto[] items;

    protected override async Task OnInitAsync()
    {
        var response = await HttpForumTopicService.GetForumTopics(id);
        switch (response.StatusCode)
        {
            case System.Net.HttpStatusCode.OK:
                string content = await response.Content.ReadAsStringAsync();
                // items = Json.Deserialize<ForumTopicForListDto[]>(content);
                break;
            default:
                // await response.Content.ReadAsStringAsync();
                AlertifyService = new AlertifyService(JsRuntime);
// to do, categorie inside message
                AlertifyService.Open("Erreur lors du chargement des sujets du forum", TypeAlertify.Error);
                UriHelper.NavigateTo("/");
                break;
        };
    }
}
