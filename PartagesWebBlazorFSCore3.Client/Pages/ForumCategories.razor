@page "/forumCategories"
@inject IUriHelper UriHelper
@inject IJsAlertifyService JsAlertifyService
@inject IJsMomentService JsMomentService
@inject IHttpForumCategorieService HttpForumCategorieService
@using System.Collections
@using PartagesWebBlazorFSCore3.Client.Helpers
@using PartagesWebBlazorFSCore3.Client.Services.Http
@using PartagesWebBlazorFSCore3.Client.Services.Js
@using PartagesWebBlazorFSCore3.Shared.Dtos.Output.Forum.ForumCategorie.ForList
@using PartagesWebBlazorFSCore3.Shared.Helpers

<NavBarTop />

<h1 class="title is-3">Forum</h1>

<p>Voici la liste des catégories du forum</p>

@if (items == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nom</th>
                <th>Nombres de sujets</th>
                <th>Nombres de postes</th>
                <th>Dernier poste</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td><a href="forumTopics/@item.Id">@item.Name</a></td>
                    <td>@item.CountForumTopic</td>
                    <td>@item.CountForumPost</td>
                    @if (item.LastForumPost == null)
                    {
                        <td></td>
                    }
                    else
                    {
                        <td><a href="forumPosts/@item.LastForumPost.ForumTopic.Id?page=@item.PageLastForumPost">@item.LastForumPost.ForumTopic.Name</a> par @item.LastForumPost.User.Username.CapitalizeFirst() @itemsDate[item.Id].ToString()</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@functions {
        ForumCategorieForListDto[] items;
        Hashtable itemsDate = new Hashtable();

    protected override async Task OnInitAsync()
    {
        var response = await HttpForumCategorieService.GetForumCategories();
        switch (response.StatusCode)
        {
            case System.Net.HttpStatusCode.OK:
                string content = await response.Content.ReadAsStringAsync();
                items = Json.Deserialize<ForumCategorieForListDto[]>(content);

                // Hashtable for date async
                itemsDate = new Hashtable();
                foreach (var item in items)
                {
                    if (item.LastForumPost != null)
                    {
                        itemsDate.Add(item.Id, await JsMomentService.FromNow(item.LastForumPost.Date.ToString()));
                    }
                }
                break;
            default:
                JsAlertifyService.Open("Erreur lors du chargement des catégories du forum", TypeAlertify.Error);
                UriHelper.NavigateTo("/");
                break;
        };
    }
}
